.invalid-feedback {
    display: none;
    color: red;
}

input:invalid:not(:placeholder-shown) + .invalid-feedback {
    display: block;
}


.chatContainer {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: white;
  }
  
  .chat {
    max-width: 600px;
    width: 100%;
    height: 100%;
  }
  
  .toolCall {
    white-space: pre-wrap;
  }
  
  
  .fileViewer {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    padding: 20px;
    background-color: #efefef;
    overflow: hidden;
    border-radius: 16px;
  }
  
  .filesList {
    overflow-y: auto;
    padding: 10px;
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
    width: 100%;
  }
  
  .grow {
    flex-grow: 1;
  }
  
  .fileEntry {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #ececf1;
    gap: 16px;
    width: 100%;
  }
  
  .fileName {
    flex-grow: 1;
  }
  .fileStatus {
    font-size: 0.8em;
    color: #666;
  }
  
  .fileDeleteIcon {
    cursor: pointer;
  }
  
  .fileUploadContainer {
    padding: 10px;
    display: flex;
    justify-content: center;
  }
  
  .fileUploadBtn {
    background-color: #000;
    color: white;
    padding: 8px 24px;
    border-radius: 32px;
    text-align: center;
    display: inline-block;
    cursor: pointer;
  }
  
  .fileUploadInput {
    display: none;
  }
  
  .title {
    font-size: 1.2em;
    font-weight: 600;
  }
  
  .fileName {
    width: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .warningsContainer {
    padding: 20px;
    /* background-color: #d95c5c; */
    /* outline: 8px solid #4caf50; */
    background-color: #fff;
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    border-radius: 12px;
    color: #000;
  }
  
  .empty,
  .assistantId {
    background-color: #ffffff;
    padding: 10px;
    margin-bottom: 10px;
    width: 80%;
    border: 1px solid #ccc;
  }
  
  .warningsButton {
    padding: 8px 24px;
    background-color: #000;
    color: white;
    border: none;
    font-size: 1em;
    border-radius: 60px;
    cursor: pointer;
  }
  .warningsContainer h1 {
    font-size: 1.5em;
    font-weight: 600;
  }
  .warningsResult {
    border-radius: 8px;
    padding: 0 8px;
    padding: 8px 24px;
    background-color: #000;
    color: white;
    font-size: 1em;
    border-radius: 60px;
  }
  
  .warningsMessage {
    margin: 20px 0;
    font-size: 1em;
  }
  .warningsMessage span {
    background-color: #efefef;
    border-radius: 8px;
    padding: 0 8px;
  }
  
  .chatContainer {
    display: flex;
    flex-direction: column-reverse;
    height: 100%;
    width: 100%;
  }
  
  .inputForm {
    display: flex;
    width: 100%;
    padding: 10px;
    padding-bottom: 40px;
    order: 1;
  }
  
  .input {
    flex-grow: 1;
    padding: 16px 24px;
    margin-right: 10px;
    border-radius: 60px;
    border: 2px solid transparent;
    font-size: 1em;
    background-color: #efefef;
  }
  
  .input:focus {
    outline: none !important;
    border-color: #000;
    background-color: white;
  }
  
  .button {
    padding: 8px 24px;
    background-color: #000;
    color: white;
    border: none;
    font-size: 1em;
    border-radius: 60px; /* Removed duplicate border-radius property */
  }
  
  .button:disabled {
    background-color: lightgrey;
  }
  
  .messages {
    flex-grow: 1;
    width: 100%;
    overflow-y: auto;
    padding: 10px;
    display: flex;
    flex-direction: column;
    order: 2;
  }
  
  .userMessage,
  .assistantMessage,
  .codeMessage,
  .toolCall {
    margin: 8px 0;
    padding: 8px 16px;
  
    align-self: flex-start;
    border-radius: 15px;
    max-width: 80%;
    overflow-wrap: break-word;
  }
  
  .assistantMessage img {
    max-width: 100%;
    margin: 8px 0px 8px 0px;
    border-radius: 8px;
  }
  
  .userMessage {
    align-self: flex-end;
    color: #fff;
    background-color: #000;
  }
  
  .assistantMessage {
    background-color: #efefef;
  }
  
  .codeMessage {
    padding: 10px 16px;
    background-color: #e9e9e9;
    font-family: monospace;
    counter-reset: line;
  }
  
  .codeMessage > div {
    margin-top: 4px;
  }
  
  .codeMessage span {
    color: #b8b8b8;
    margin-right: 8px;
  }
  
  .setupContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 24px;
    max-width: 600px;
    width: 100%;
    padding: 40px 20px;
  }
  
  .setupForm {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    width: 100%;
  }
  
  .inputWrapper {
    margin-bottom: 20px;
    width: 100%;
    max-width: 400px;
    display: flex;
    justify-content: center;
  }
  
  .setupForm form {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
  }
  
  .setupMessage {
    font-size: 1.1em;
    text-align: center;
    margin-bottom: 8px;
  }
  
  .toolOutput {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: space-between;
    padding: 10px;
    border-radius: var(--border-radius);
    background: linear-gradient(135deg, #a8e6cf 0%, #dcedc1 100%);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin-bottom: 10px;
    gap: 10px;
    width: fit-content;
    height: fit-content;
    color: #333;
  }
  
  .toolOutput h2,
  .toolOutput p {
    margin: 0;
    padding: 0 10px;
    flex: 1;
    text-align: center;
    color: #333;
  }
  
  @media (max-width: 600px) {
    .toolOutput {
      flex-direction: column;
      align-items: flex-start;
    }
  
    .toolOutput h2,
    .toolOutput p {
      text-align: left;
      padding: 5px 0;
    }
  }
  
  .error-container {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .weatherReport {
    display: flex;
    flex-direction: row;
    align-items: center;
    margin-bottom: 20px;
  }
  
  .weatherContainer {
    display: flex;
    align-items: flex-start;
    gap: 20px;
    justify-content: flex-start;
  }
  
  .location {
    flex: 0 0 auto;
  }
  
  .reports {
    flex: 1;
  }
  
  /* Code Interpreter Image Styles */
  .code-interpreter-image {
      max-width: 100%;
      height: auto;
      margin: 1rem 0;
      border-radius: 0.5rem;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }
  
  /* Fanned Report Covers */
  .report-covers-container {
      position: relative;
      height: 250px; /* Adjust height as needed */
      perspective: 1000px;
      width: 300px; /* Constrain width to approximate visual width of the covers */
      margin: 0 auto; /* Center the container */
  }
  
  .cover-container {
      position: absolute;
      transform-style: preserve-3d;
      transition: all 0.5 ease-in-out;
      width: 150px; /* Adjust width as needed */
      will-change: transform;
  }
  
  .report-cover {
      max-width: 100%;
      height: auto;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
      border: 2px solid #fff; /* White border */
  }
  
  /* Positioning and rotation for each cover */
  .cover1 {
      transform: rotateZ(-10deg) translateZ(-10px) translateX(-50px);
      z-index: 1;
  }
  
  .cover2 {
      transform: rotateZ(0deg) translateZ(0px);
      z-index: 2;
  }
  
  .cover3 {
      transform: rotateZ(10deg) translateZ(-10px) translateX(50px);
      z-index: 1;
  }
  
  /* Hover effect with transitions applied to hover state too */
  .report-covers-container:hover .cover1 {
      transform: rotateZ(-15deg) translateZ(10px) translateX(-70px) translateY(-10px) scale(1.05);
      transition: all 0.5s ease-in-out;
  }
  
  .report-covers-container:hover .cover2 {
      transform: rotateZ(0deg) translateZ(20px) translateY(-15px) scale(1.1);
      z-index: 3; /* Bring middle cover to front on hover */
      transition: all 0.5s ease-in-out;
  }
  
  .report-covers-container:hover .cover3 {
      transform: rotateZ(15deg) translateZ(10px) translateX(70px) translateY(-10px) scale(1.05);
      transition: all 0.5s ease-in-out;
  }
  
  /* Adjustments for smaller screens if needed */
  @media (max-width: 768px) {
      .report-covers-container {
          height: 200px;
          margin-bottom: 3rem !important;
      }
      .cover-container {
          width: 100px;
      }
      .cover1 {
          transform: rotateZ(-10deg) translateZ(-5px) translateX(-30px);
      }
      .cover3 {
          transform: rotateZ(10deg) translateZ(-5px) translateX(30px);
      }
      .report-covers-container:hover .cover1 {
          transform: rotateZ(-15deg) translateZ(5px) translateX(-40px) translateY(-5px) scale(1.05);
      }
      .report-covers-container:hover .cover2 {
          transform: rotateZ(0deg) translateZ(10px) translateY(-10px) scale(1.1);
      }
      .report-covers-container:hover .cover3 {
          transform: rotateZ(15deg) translateZ(5px) translateX(40px) translateY(-5px) scale(1.05);
      }
  }
  
  /* Custom styles for Nature Finance branding */
  header.navbar {
    background-color: #001926 !important; /* NF Dark Blue */
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
  }
  
  header.navbar .navbar-brand,
  header.navbar .nav-link {
    color: #ffffff !important; /* White text */
  }
  
  header.navbar .nav-link:hover,
  header.navbar .navbar-brand:hover {
    color: #3ab287 !important; /* NF Green on hover */
  }
  
  header.navbar .navbar-toggler-icon {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 0.75)' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e") !important;
  }
  
  header.navbar .navbar-toggler {
    border-color: rgba(255, 255, 255, 0.3);
  }
  
  #page-footer {
    background-color: #001926 !important; /* NF Dark Blue */
    color: #fff !important;
    padding-top: 2rem !important;
    padding-bottom: 2rem !important;
  }
  
  #page-footer .text-muted,
  #page-footer a.text-muted {
    color: rgba(255, 255, 255, 0.7) !important;
  }
  
  #page-footer a.text-muted:hover {
    color: #3ab287 !important; /* NF Green */
    text-decoration: none;
  }
  
  /* Homepage specific styling */
  .container.mt-5 {
    position: relative;
    z-index: 1;
  }
  
  .display-4 {
    color: #001926; /* NF Dark Blue */
    font-weight: 600;
  }
  
  .lead {
    color: #3ab287; /* NF Green */
    font-size: 1.3rem;
    font-weight: 400;
  }
  
  /* Add a subtle gradient background to the page */
  body {
    background: linear-gradient(to bottom, #ffffff, #f0f8f5);
    min-height: 100vh;
  }
  
  /* Style the buttons */
  .btn-primary {
    background-color: #3ab287 !important;
    border-color: #3ab287 !important;
    transition: all 0.5s ease;
  }
  
  .btn-primary:hover {
    background-color: #2e8e6c !important;
    border-color: #2e8e6c !important;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .btn-outline-light {
    color: #001926 !important;
    border-color: #001926 !important;
    background-color: transparent !important;
    transition: all 0.5s ease;
  }
  
  .btn-outline-light:hover {
    color: white !important;
    background-color: #001926 !important;
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

/* Custom styles for auto-resizing textarea */
#userInput.form-control {
  resize: none; /* Prevent manual resize */
  overflow-y: hidden; /* Hide scrollbar initially */
  line-height: 1.5; /* Adjust for better multi-line readability */
  min-height: calc(1.5em + .75rem + 2px); /* Match Bootstrap's default sizing (line-height + padding + border) */
  height: auto; /* Allow it to grow */
}

/* Ensure button alignment with textarea */
#chatForm {
  align-items: flex-end; /* Align items to the bottom, good for when textarea grows */
}

#chatForm .btn {
  /* Adjust button height to match the initial textarea height if desired, or leave as is for Bootstrap default */
  /* For example, to match min-height of textarea: */
  /* height: calc(1.5em + .75rem + 2px); */
  /* Or, more simply, ensure it aligns well without a fixed height by relying on flex-end */
  flex-shrink: 0; /* Prevent button from shrinking */
  position: relative;
}

#chatForm .btn .button__loader {
    display: none;
}

#chatForm .btn[aria-busy="true"] .button__text {
    display: none;
}

#chatForm .btn[aria-busy="true"] .button__loader {
    display: inline-block;
}

/* Browse page content spacing and width constraints */
.browse-content {
    max-width: 66.67%; /* ~2/3 of width on large screens */
    margin: 0 auto;
    padding: 0 1rem; /* Minimum 1rem left/right spacing on mobile */
}

.browse-content .row.mb-4 {
    margin-top: 3rem; /* Add space above the selector div */
}

.browse-content article {
    margin-bottom: 3rem; /* Add space below the article */
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .browse-content {
        max-width: 100%;
        padding: 0 1.5rem; /* Slightly more padding on mobile */
    }
    
    .browse-content .row.mb-4 {
        margin-top: 2rem; /* Less top margin on mobile */
    }
    
    .browse-content article {
        margin-bottom: 2rem; /* Less bottom margin on mobile */
    }
}

/* Target leaf elements (no children) in article, excluding inline styling tags */
article *:not(:has(*)):not(sup):not(sub):not(em):not(strong):not(i):not(b):not(s):not(u):not(br):not(code):not(cite) {
    /* Make element focusable */
    outline: 2px solid transparent;
    outline-offset: 2px;
    transition: outline-color 0.2s ease;
}

/* Focus state for leaf elements */
article *:not(:has(*)):not(sup):not(sub):not(em):not(strong):not(i):not(b):not(s):not(u):not(br):not(code):not(cite):focus {
    outline-color: #3ab287; /* Use your brand green */
    outline-style: solid;
}

/* Hover state for leaf elements */
article *:not(:has(*)):not(sup):not(sub):not(em):not(strong):not(i):not(b):not(s):not(u):not(br):not(code):not(cite):hover {
    outline-color: rgba(58, 178, 135, 0.3); /* Subtle hover indicator */
}

/* Display data-pages attribute value on hover - ONLY for leaf elements */
article *:not(:has(*))[data-pages]:hover::after {
    content: "Pages: " attr(data-pages);
    position: absolute;
    top: -30px;
    left: 0;
    background-color: #001926; /* Your dark blue */
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    white-space: nowrap;
    z-index: 1000;
    pointer-events: none;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

/* Ensure leaf elements with data-pages have relative positioning for the tooltip */
article *:not(:has(*))[data-pages] {
    position: relative;
}

.button__loader {
  display: inline-block; /* Or flex, if you want to align dots easily */
  vertical-align: middle; /* Helps align with text if it were visible */
}

.loading-dot {
  display: inline-block;
  width: 6px;
  height: 6px;
  margin: 0 2px;
  background-color: currentColor; /* Uses the button's text color */
  border-radius: 50%;
  animation: loadingDots 1.4s infinite ease-in-out both;
}

.loading-dot:nth-child(1) {
  animation-delay: -0.32s;
}

.loading-dot:nth-child(2) {
  animation-delay: -0.16s;
}

.loading-dot:nth-child(3) {
  animation-delay: 0s;
}

@keyframes loadingDots {
  0%, 80%, 100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1.0);
  }
}

.dots{display:flex;gap:4px}
.dots div{width:8px;height:8px;background:#000;border-radius:50%;animation:bounce 1.4s infinite both}
.dots div:nth-child(1){animation-delay:-.32s}
.dots div:nth-child(2){animation-delay:-.16s}
@keyframes bounce{0%,80%,100%{transform:scale(0)}40%{transform:scale(1)}}

/* Network Error Banner */
.networkError {
  display: none;
  background-color: #fff3cd;
  color: #856404;
  border: 1px solid #ffeeba;
  padding: 8px 16px;
  border-radius: 8px;
  margin: 8px 0;
  width: fit-content;
}

.text-carousel {
  --carousel-hpad: 3rem;
  height: auto;
  /* Container no longer controls truncation height; keep overflow visible so controls are visible */
  transition: max-height 0.3s ease;
  position: relative;
  border: 1px solid #dee2e6;
  border-radius: 0.375rem;
  padding: 0 var(--carousel-hpad);
  overflow-x: hidden;
  overflow-y: visible;
}

/* Remove right-edge fade; horizontal overflow is hidden */

.text-carousel.expanded {}

/* Right-edge fade so the next slide is visually masked */
.text-carousel::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  width: var(--carousel-hpad);
  height: 100%;
  pointer-events: none;
  z-index: 5;
  background: linear-gradient(to left, var(--bs-body-bg, #ffffff) 0%, rgba(255, 255, 255, 0) 100%);
}

.carousel-content {
  display: flex;
  transition: transform 0.3s ease;
  height: 100%;
}

.text-slide {
  min-width: 100%;
  width: 100%;
  flex-shrink: 0;
  padding: 1rem;
  box-sizing: border-box;
}

/* Truncate only the slide body, not the entire carousel */
.text-slide .slide-body {
  max-height: var(--collapsed-max-height, 20rem);
  overflow: hidden;
  position: relative;
}

.text-carousel.expanded .text-slide .slide-body {
  max-height: none;
}

/* Optional: fade at bottom when truncated */
.text-slide .slide-body::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 3rem;
  pointer-events: none;
  background: linear-gradient(to bottom, rgba(255,255,255,0), var(--bs-body-bg, #fff));
  opacity: 0;
  transition: opacity 0.2s ease;
}
.text-slide.is-overflowing .slide-body::after { opacity: 1; }
.text-carousel.expanded .text-slide .slide-body::after { opacity: 0; }

.carousel-nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}

.carousel-nav.prev {
  left: 10px;
}

.carousel-nav.next {
  right: 10px;
}

.text-carousel-indicators {
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10;
}

.expand-controls {
  margin-top: 1rem;
}